<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- 向spring 的bean工厂注册实体 -->
    <bean id="helloWorldImpl1" class="com.inte.HelloWorldImpl1"></bean>
    <bean id="helloWorldImpl2" class="com.inte.HelloWorldImpl2"></bean>
    <bean id="timehandler" class="com.test.TimeHandler"></bean>
    <bean id="loghandler" class="com.test.LogHandler"></bean>


    <!-- aop 配置 -->
    <aop:config>

        <!-- 切面（aspect） 类是对物体特征的抽象，切面就是对横切关注点的抽象 -->
        <!-- ref: 通俗的说切入需要执行的方法 -->
        <aop:aspect id="time" ref="timehandler" order="1">

            <!--切入点（pointcut） 对连接点进行拦截的定义 -->
            <!-- 通俗的说就是某一个接口 -->
            <aop:pointcut id="times" expression="execution(* com.inte.HelloWorld.*(..))"></aop:pointcut>

            <!--  执行前运行  , method 代理的方法，  pointcut-ref 切入点 -->
            <aop:before method="printTime" pointcut-ref="times"></aop:before>

            <!--  执行后运行-->
            <aop:after method="printTime" pointcut-ref="times"></aop:after>

        </aop:aspect>


        <!-- 切入log日志管理  ,id是名字。 ref是切入运行的类    order运行级别-->
        <aop:aspect id="log" ref="loghandler" order="2">

            <!--切入点， 也就是说在哪个位置运行 , 这里监听了HelloWorld接口的所有方法 ， 实现类也会被切入-->
            <aop:pointcut id="Logs" expression="execution(* com.inte.HelloWorld.*(..))"></aop:pointcut>

            <aop:before method="beforeLog" pointcut-ref="Logs"></aop:before>

            <aop:before method="afterLog" pointcut-ref="Logs"></aop:before>


        </aop:aspect>


    </aop:config>



















</beans>